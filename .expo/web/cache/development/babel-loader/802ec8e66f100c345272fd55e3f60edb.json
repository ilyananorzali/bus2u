{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\bus2u\\\\BUS2U-main\\\\src\\\\screens\\\\SignupScreen.js\";\n\nimport React, { useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SizedBox from \"./components/SizedBox\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { clearState, createUserWithEmailAndPassword, selectUser } from \"./slices/userSlice\";\nimport { useNavigation } from '@react-navigation/native';\n\nvar SignupScreen = function SignupScreen(props) {\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(selectUser),\n      isFetching = _useSelector.isFetching,\n      isSuccess = _useSelector.isSuccess,\n      isError = _useSelector.isError,\n      errorMessage = _useSelector.errorMessage;\n\n  var _useForm = useForm({\n    defaultValues: {\n      username: '',\n      email: '',\n      password: '',\n      password_repeat: ''\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors,\n      watch = _useForm.watch;\n\n  console.log(errors);\n  var password = useRef({});\n  password.current = watch(\"password\");\n  var onSubmit = handleSubmit(function (_ref) {\n    var username = _ref.username,\n        email = _ref.email,\n        password = _ref.password;\n    var data = {\n      username: username,\n      email: email,\n      password: password\n    };\n    dispatch(createUserWithEmailAndPassword(data));\n  });\n  useEffect(function () {\n    return function () {\n      dispatch(clearState());\n    };\n  }, []);\n  useEffect(function () {\n    if (isError) {\n      Alert.alert(\"\" + errorMessage);\n      dispatch(clearState());\n    }\n\n    if (isSuccess) {\n      dispatch(clearState());\n      navigation.navigate('Home');\n    }\n  }, [isSuccess, isError]);\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, isFetching ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }\n  }) : null, React.createElement(Image, {\n    style: styles.logostyle,\n    source: require(\"../../assets/B2.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), React.createElement(SafeAreaView, {\n    style: styles.safeAreaView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Let's Get Started!\"), React.createElement(SizedBox, {\n    height: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.subtitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Create your account\"), React.createElement(SizedBox, {\n    height: 32,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Username\"), React.createElement(Controller, {\n    control: control,\n    name: \"username\",\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          onBlur = _ref2$field.onBlur,\n          onChange = _ref2$field.onChange,\n          value = _ref2$field.value;\n      return React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        autoCompleteType: \"username\",\n        autoCorrect: false,\n        keyboardType: \"default\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        returnKeyType: \"next\",\n        style: styles.textInput,\n        textContentType: \"username\",\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      });\n    },\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, errors.username && '*Username is required'), React.createElement(SizedBox, {\n    height: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(Controller, {\n    control: control,\n    name: \"email\",\n    render: function render(_ref3) {\n      var _ref3$field = _ref3.field,\n          onBlur = _ref3$field.onBlur,\n          onChange = _ref3$field.onChange,\n          value = _ref3$field.value;\n      return React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        autoCompleteType: \"email\",\n        autoCorrect: false,\n        keyboardType: \"email-address\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        returnKeyType: \"next\",\n        style: styles.textInput,\n        textContentType: \"emailAddress\",\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      });\n    },\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, errors.email && '*Email is required'), React.createElement(SizedBox, {\n    height: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }), React.createElement(Pressable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Password\"), React.createElement(Controller, {\n    control: control,\n    name: \"password\",\n    render: function render(_ref4) {\n      var _ref4$field = _ref4.field,\n          onBlur = _ref4$field.onBlur,\n          onChange = _ref4$field.onChange,\n          value = _ref4$field.value;\n      return React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        returnKeyType: \"next\",\n        style: styles.textInput,\n        textContentType: \"password\",\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      });\n    },\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })), React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, errors.password && '*Password is required')), React.createElement(SizedBox, {\n    height: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), React.createElement(Controller, {\n    control: control,\n    name: \"password_repeat\",\n    render: function render(_ref5) {\n      var _ref5$field = _ref5.field,\n          onBlur = _ref5$field.onBlur,\n          onChange = _ref5$field.onChange,\n          value = _ref5$field.value;\n      return React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        onSubmitEditing: onSubmit,\n        returnKeyType: \"done\",\n        style: styles.textInput,\n        textContentType: \"password\",\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      });\n    },\n    rules: ({\n      required: true\n    }, {\n      validate: function validate(value) {\n        return value === password.current || \"The passwords do not match\";\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, errors.password_repeat && errors.password_repeat.message), React.createElement(SizedBox, {\n    height: 32,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }), isFetching ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }) : React.createElement(TouchableOpacity, {\n    onPress: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, \"Sign Up\")))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    marginTop: 70,\n    marginBottom: 40\n  },\n  logostyle: {\n    width: 170,\n    height: 50,\n    textAlign: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: \"#2E3035\",\n    borderRadius: 0,\n    height: 48,\n    justifyContent: 'center'\n  },\n  buttonTitle: {\n    color: '#FFFFFF',\n    fontSize: 17,\n    fontWeight: '600',\n    lineHeight: 22\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 32\n  },\n  forgotPasswordContainer: {\n    alignItems: 'flex-end'\n  },\n  form: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 0,\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16\n  },\n  label: {\n    color: \"#BCABAB\",\n    fontSize: 15,\n    fontWeight: '400',\n    lineHeight: 20,\n    width: 80\n  },\n  root: {\n    backgroundColor: \"#D2DCFF\",\n    flex: 1\n  },\n  safeAreaView: {\n    flex: 1\n  },\n  subtitle: {\n    color: \"#394A48\",\n    fontSize: 17,\n    fontWeight: '400',\n    lineHeight: 22\n  },\n  textButton: {\n    color: '#FFFFFF',\n    fontSize: 15,\n    fontWeight: '400',\n    lineHeight: 20,\n    color: \"#394A48\"\n  },\n  textInput: {\n    color: \"#394A48\",\n    flex: 1\n  },\n  title: {\n    color: \"#394A48\",\n    fontSize: 28,\n    fontWeight: '700',\n    lineHeight: 34\n  }\n});\nexport default SignupScreen;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/bus2u/BUS2U-main/src/screens/SignupScreen.js"],"names":["React","useRef","useEffect","useSelector","useDispatch","SizedBox","useForm","Controller","clearState","createUserWithEmailAndPassword","selectUser","useNavigation","SignupScreen","props","navigation","dispatch","isFetching","isSuccess","isError","errorMessage","defaultValues","username","email","password","password_repeat","control","handleSubmit","errors","formState","watch","console","log","current","onSubmit","data","Alert","alert","navigate","Keyboard","dismiss","styles","root","container","logostyle","require","safeAreaView","Platform","OS","content","title","subtitle","form","label","field","onBlur","onChange","value","textInput","required","color","validate","message","button","buttonTitle","StyleSheet","create","justifyContent","alignItems","flex","marginTop","marginBottom","width","height","textAlign","backgroundColor","borderRadius","fontSize","fontWeight","lineHeight","paddingHorizontal","paddingVertical","forgotPasswordContainer","flexDirection","textButton"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, SafeAreaView, KeyboardAvoidingView, Pressable, TextInput, ScrollView, Keyboard, TouchableWithoutFeedback, Alert, ActivityIndicator } from \"react-native\"\nimport SizedBox from './components/SizedBox';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { clearState, createUserWithEmailAndPassword, selectUser } from './slices/userSlice';\nimport { useNavigation } from '@react-navigation/native';\n\n\nconst SignupScreen = (props) => {\n  // Navigation hook\n  const navigation = useNavigation()\n\n  // Dispatch hook\n  const dispatch = useDispatch()\n  const {isFetching, isSuccess, isError, errorMessage} = useSelector(selectUser)\n  const {control, handleSubmit, formState: {errors}, watch} = useForm ({\n    defaultValues: {\n      username: '',\n      email: '',\n      password: '',\n      password_repeat: ''\n    }\n}) \nconsole.log(errors)\nconst password = useRef({});\npassword.current = watch(\"password\")\n\n\nconst onSubmit = handleSubmit(({username, email, password}) => {\n  const data = {username, email, password}\n  dispatch(createUserWithEmailAndPassword(data));\n \n})\n\n  // For cleanup after exiting this page\n  useEffect(() => {\n      return () => {\n        dispatch(clearState());\n      }\n  }, [])\n\n  // For loading success and error\n  useEffect(() => {\n    if(isError) {\n      Alert.alert(`${errorMessage}`)\n      dispatch(clearState());\n    }\n    if(isSuccess) {\n      dispatch(clearState());\n      navigation.navigate('Home');\n    }\n  }, [isSuccess, isError]);\n\n\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}> \n    <ScrollView style={styles.root}>\n      <View style={styles.container}>\n        {isFetching ? (<ActivityIndicator size=\"large\" /> ) : null}\n        <Image style={styles.logostyle} source={require('../../assets/B2.png')} />\n      </View>\n\n      <SafeAreaView style={styles.safeAreaView}>\n        <KeyboardAvoidingView\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n          style={styles.content}\n        >\n\n          <Text style={styles.title}>Let's Get Started!</Text>\n          <SizedBox height={8} />\n\n          <Text style={styles.subtitle}>Create your account</Text>\n          <SizedBox height={32} />\n\n          <View style={styles.form}>\n            <Text style={styles.label}>Username</Text>\n            <Controller \n            control={control}\n            name=\"username\"\n            render={({field: {onBlur, onChange, value}}) => (\n              <TextInput\n              autoCapitalize=\"none\"\n              autoCompleteType=\"username\"\n              autoCorrect={false}\n              keyboardType=\"default\"\n              onBlur={onBlur}\n              onChangeText={value => onChange(value)}\n              returnKeyType=\"next\"\n              style={styles.textInput}\n              textContentType=\"username\"\n              value={value}\n            />\n\n            )}\n            rules={{required: true}}\n            \n            /> \n\n           \n          </View>\n          <Text style = {{color: \"red\"}} >{errors.username && '*Username is required'}</Text>\n\n\n          <SizedBox height={8} />\n          <View style={styles.form}>\n            <Text style={styles.label}>Email</Text>\n            <Controller \n            control={control}\n            name=\"email\"\n            render={({field: {onBlur, onChange, value}}) => (\n              <TextInput\n              autoCapitalize=\"none\"\n              autoCompleteType=\"email\"\n              autoCorrect={false}\n              keyboardType=\"email-address\"\n              onBlur={onBlur}\n              onChangeText={value => onChange(value)}\n              returnKeyType=\"next\"\n              style={styles.textInput}\n              textContentType=\"emailAddress\"\n              value={value}\n            />\n\n            )}\n            rules={{required: true}}\n            \n            /> \n\n          </View>\n          <Text style = {{color: \"red\"}}>{errors.email && '*Email is required'}</Text>\n\n\n          <SizedBox height={8} />\n\n\n\n          <Pressable>\n            <View style={styles.form}>\n              <Text style={styles.label}>Password</Text>\n\n              <Controller \n            control={control}\n            name=\"password\"\n            render={({field: {onBlur, onChange, value}}) => (\n              <TextInput\n              autoCapitalize=\"none\"\n              secureTextEntry={true}\n              autoCompleteType=\"password\"\n              autoCorrect={false}\n              onBlur={onBlur}\n              onChangeText={value => onChange(value)}\n              returnKeyType=\"next\"\n              style={styles.textInput}\n              textContentType=\"password\"\n              value={value}\n            />\n\n            )}\n            rules={{required: true}}\n            \n            /> \n\n            </View>\n            <Text style = {{color: \"red\"}}>{errors.password && '*Password is required'}</Text>\n          </Pressable>\n\n          <SizedBox height={8} />\n          <View style={styles.form}>\n            <Text style={styles.label}>Confirm Password</Text>\n\n            <Controller\n                control={control}\n                name=\"password_repeat\"\n                render={({field: {onBlur, onChange, value}}) => (\n                  <TextInput\n                  autoCapitalize=\"none\"\n                  secureTextEntry={true}\n                  autoCompleteType=\"password\"\n                  autoCorrect={false}\n                  onBlur={onBlur}\n                  onChangeText={value => onChange(value)}\n                  onSubmitEditing={onSubmit}\n                  returnKeyType=\"done\"\n                  style={styles.textInput}\n                  textContentType=\"password\"\n                  value={value}\n                />\n                )}\n                rules={{required: true}, {\n                  validate: value => value === password.current || \n                  \"The passwords do not match\"\n                }}\n                />\n\n\n          </View>\n          <Text>{errors.password_repeat && errors.password_repeat.message}</Text>\n\n\n\n          <SizedBox height={32} />\n\n                {isFetching ? (\n                  <ActivityIndicator size=\"large\" />\n                ) : (\n                  <TouchableOpacity onPress={onSubmit}>\n                  <View style={styles.button}>\n                    <Text style={styles.buttonTitle}>Sign Up</Text>\n                  </View>\n                </TouchableOpacity>\n                )}\n\n          \n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    </ScrollView>\n    </TouchableWithoutFeedback>\n\n  )\n}\n\nconst styles = StyleSheet.create({\n\n\n\n  container: {\n\n    justifyContent: 'center', //Centered vertically\n    alignItems: 'center', // Centered horizontally\n    flex: 1,\n    marginTop: 70,\n    marginBottom: 40\n\n  },\n  logostyle: {\n\n    width: 170,\n    height: 50,\n    textAlign: 'center',\n\n  },\n  button: {\n    alignItems: 'center',\n    // backgroundColor: 'rgb(93, 95, 222)',\n    backgroundColor: \"#2E3035\",\n    borderRadius: 0,\n    height: 48,\n    justifyContent: 'center',\n  },\n  buttonTitle: {\n    color: '#FFFFFF',\n    fontSize: 17,\n    fontWeight: '600',\n    lineHeight: 22,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 32,\n  },\n  forgotPasswordContainer: {\n    alignItems: 'flex-end',\n\n  },\n  form: {\n    alignItems: 'center',\n    // backgroundColor: 'rgb(58, 58, 60)',\n    backgroundColor: 'white',\n    borderRadius: 0,\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  label: {\n    // color: 'rgba(235, 235, 245, 0.6)',\n    color: \"#BCABAB\",\n    fontSize: 15,\n    fontWeight: '400',\n    lineHeight: 20,\n    width: 80,\n  },\n  root: {\n    backgroundColor: \"#D2DCFF\",\n    flex: 1,\n\n  },\n  safeAreaView: {\n    flex: 1,\n  },\n  subtitle: {\n    // color: 'rgba(235, 235, 245, 0.6)',\n    color: \"#394A48\",\n    fontSize: 17,\n    fontWeight: '400',\n    lineHeight: 22,\n  },\n  textButton: {\n    color: '#FFFFFF',\n    fontSize: 15,\n    fontWeight: '400',\n    lineHeight: 20,\n    color: \"#394A48\",\n  },\n  textInput: {\n    color: \"#394A48\",\n    flex: 1,\n  },\n  title: {\n    color: \"#394A48\",\n    fontSize: 28,\n    fontWeight: '700',\n    lineHeight: 34,\n  },\n})\n\n\nexport default SignupScreen"]},"metadata":{},"sourceType":"module"}