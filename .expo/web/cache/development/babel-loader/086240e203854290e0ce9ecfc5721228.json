{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  origin: null,\n  destination: null,\n  travelTimeInformation: null,\n  showMap: true,\n  isArrived: null\n};\nexport var navSlice = createSlice({\n  name: 'nav',\n  initialState: initialState,\n  reducers: {\n    setOrigin: function setOrigin(state, action) {\n      state.origin = action.payload;\n    },\n    setDestination: function setDestination(state, action) {\n      state.destination = action.payload;\n    },\n    setTravelTimeInformation: function setTravelTimeInformation(state, action) {\n      state.travelTimeInformation = action.payload;\n    },\n    setMap: function setMap(state, action) {\n      state.showMap = !state.showMap;\n    },\n    setArrived: function setArrived(state) {\n      state.isArrived = true;\n    },\n    clearState: function clearState(state) {\n      state.showMap = true;\n      state.isArrived = false;\n      return state;\n    }\n  }\n});\nvar _navSlice$actions = navSlice.actions,\n    setOrigin = _navSlice$actions.setOrigin,\n    setDestination = _navSlice$actions.setDestination,\n    setTravelTimeInformation = _navSlice$actions.setTravelTimeInformation,\n    setMap = _navSlice$actions.setMap,\n    clearState = _navSlice$actions.clearState,\n    setArrived = _navSlice$actions.setArrived;\nexport { setOrigin, setDestination, setTravelTimeInformation, setMap, clearState, setArrived };\nexport var selectOrigin = function selectOrigin(state) {\n  return state.nav.origin;\n};\nexport var selectDestination = function selectDestination(state) {\n  return state.nav.destination;\n};\nexport var selectTravelTimeInformation = function selectTravelTimeInformation(state) {\n  return state.nav.travelTimeInformation;\n};\nexport var selectMap = function selectMap(state) {\n  return state.nav.showMap;\n};\nexport var selectArrived = function selectArrived(state) {\n  return state.nav.isArrived;\n};\nexport default navSlice.reducer;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/bus2u/BUS2U-main/src/screens/slices/navSlice.js"],"names":["createSlice","initialState","origin","destination","travelTimeInformation","showMap","isArrived","navSlice","name","reducers","setOrigin","state","action","payload","setDestination","setTravelTimeInformation","setMap","setArrived","clearState","actions","selectOrigin","nav","selectDestination","selectTravelTimeInformation","selectMap","selectArrived","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,WAAW,EAAE,IAFM;AAGnBC,EAAAA,qBAAqB,EAAE,IAHJ;AAInBC,EAAAA,OAAO,EAAE,IAJU;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAArB;AAQA,OAAO,IAAMC,QAAQ,GAAGP,WAAW,CAAC;AAClCQ,EAAAA,IAAI,EAAE,KAD4B;AAElCP,EAAAA,YAAY,EAAZA,YAFkC;AAGlCQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,mBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5BD,MAAAA,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACC,OAAtB;AACD,KAHO;AAIRC,IAAAA,cAAc,EAAE,wBAACH,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,CAACR,WAAN,GAAoBS,MAAM,CAACC,OAA3B;AACD,KANO;AAORE,IAAAA,wBAAwB,EAAE,kCAACJ,KAAD,EAAQC,MAAR,EAAmB;AAC3CD,MAAAA,KAAK,CAACP,qBAAN,GAA8BQ,MAAM,CAACC,OAArC;AACD,KATO;AAURG,IAAAA,MAAM,EAAE,gBAACL,KAAD,EAAQC,MAAR,EAAmB;AACzBD,MAAAA,KAAK,CAACN,OAAN,GAAgB,CAAEM,KAAK,CAACN,OAAxB;AACD,KAZO;AAaRY,IAAAA,UAAU,EAAE,oBAACN,KAAD,EAAW;AACrBA,MAAAA,KAAK,CAACL,SAAN,GAAkB,IAAlB;AACD,KAfO;AAiBRY,IAAAA,UAAU,EAAE,oBAACP,KAAD,EAAW;AACrBA,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AACAM,MAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACA,aAAOK,KAAP;AACD;AArBO;AAHwB,CAAD,CAA5B;AA4BA,wBAA8FJ,QAAQ,CAACY,OAAvG;AAAA,IAAOT,SAAP,qBAAOA,SAAP;AAAA,IAAkBI,cAAlB,qBAAkBA,cAAlB;AAAA,IAAkCC,wBAAlC,qBAAkCA,wBAAlC;AAAA,IAA4DC,MAA5D,qBAA4DA,MAA5D;AAAA,IAAoEE,UAApE,qBAAoEA,UAApE;AAAA,IAAgFD,UAAhF,qBAAgFA,UAAhF;;AAGP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACT,KAAD;AAAA,SAAWA,KAAK,CAACU,GAAN,CAAUnB,MAArB;AAAA,CAArB;AACP,OAAO,IAAMoB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACX,KAAD;AAAA,SAAWA,KAAK,CAACU,GAAN,CAAUlB,WAArB;AAAA,CAA1B;AACP,OAAO,IAAMoB,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACZ,KAAD;AAAA,SAAWA,KAAK,CAACU,GAAN,CAAUjB,qBAArB;AAAA,CAApC;AACP,OAAO,IAAMoB,SAAS,GAAG,SAAZA,SAAY,CAACb,KAAD;AAAA,SAAWA,KAAK,CAACU,GAAN,CAAUhB,OAArB;AAAA,CAAlB;AACP,OAAO,IAAMoB,aAAa,GAAG,SAAhBA,aAAgB,CAACd,KAAD;AAAA,SAAWA,KAAK,CAACU,GAAN,CAAUf,SAArB;AAAA,CAAtB;AAIP,eAAeC,QAAQ,CAACmB,OAAxB","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  origin: null,\n  destination: null,\n  travelTimeInformation: null,\n  showMap: true,\n  isArrived: null,\n}\n\nexport const navSlice = createSlice({\n  name: 'nav',\n  initialState,\n  reducers: {\n    setOrigin: (state, action) => {\n      state.origin = action.payload\n    },\n    setDestination: (state, action) => {\n      state.destination = action.payload\n    },\n    setTravelTimeInformation: (state, action) => {\n      state.travelTimeInformation = action.payload\n    },\n    setMap: (state, action) => {\n      state.showMap = !(state.showMap)\n    },\n    setArrived: (state) => {\n      state.isArrived = true;\n    },\n\n    clearState: (state) => {\n      state.showMap = true;\n      state.isArrived = false;\n      return state\n    }, \n  }\n})\n\nexport const {setOrigin, setDestination, setTravelTimeInformation, setMap, clearState, setArrived} = navSlice.actions;\n\n// Selectors \nexport const selectOrigin = (state) => state.nav.origin;\nexport const selectDestination = (state) => state.nav.destination;\nexport const selectTravelTimeInformation = (state) => state.nav.travelTimeInformation;\nexport const selectMap = (state) => state.nav.showMap; \nexport const selectArrived = (state) => state.nav.isArrived; \n\n\n\nexport default navSlice.reducer;"]},"metadata":{},"sourceType":"module"}