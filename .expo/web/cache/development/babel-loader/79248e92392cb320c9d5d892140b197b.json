{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\bus2u\\\\BUS2U-main\\\\src\\\\screens\\\\components\\\\Bottom.js\",\n    _this = this;\n\nimport React, { useCallback, useMemo, useRef, memo, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BottomSheet, { BottomSheetFlatList } from '@gorhom/bottom-sheet';\nimport { AntDesign } from '@expo/vector-icons';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useNavigation } from '@react-navigation/native';\nimport BusScreen from \"../BusScreen\";\nimport ETAScreen from \"../ETAScreen\";\nimport RouteScreen from \"../RouteScreen\";\nimport EndScreen from \"../EndScreen\";\nimport BusStopScreen from \"../BusStopScreen\";\nimport { call } from 'react-native-reanimated';\nvar Stacktmp = createStackNavigator();\n\nfunction EndStack() {\n  return React.createElement(Stacktmp.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Stacktmp.Screen, {\n    name: \"End\",\n    component: EndScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\nexport var BusNavigator = function BusNavigator(props) {\n  console.log(props.initialRouteName, '52 line');\n  var screenOptions = useMemo(function () {\n    return {\n      headerShown: false,\n      safeAreaInsets: {\n        top: 0\n      }\n    };\n  }, []);\n  var screenAOptions = useMemo(function () {\n    return {\n      headerleft: function headerleft() {\n        return null;\n      }\n    };\n  }, []);\n  return React.createElement(NavigationContainer, {\n    independent: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: screenOptions,\n    headerMode: \"screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, props.initialRouteName === \"Bus\" ? React.createElement(Stack.Screen, {\n    name: \"Bus\",\n    component: BusScreen,\n    options: screenAOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }) : React.createElement(Stack.Screen, {\n    name: \"Busstop\",\n    component: BusStopScreen,\n    options: screenAOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ETA\",\n    component: ETAScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Route\",\n    component: RouteScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"End\",\n    component: EndStack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar Bottom = function Bottom(props) {\n  var snap1 = ['17%', '40%', '40%'];\n  var navigation = useNavigation();\n  var bottomSheetRef = useRef(null);\n  var data = useMemo(function () {\n    return Array(50).fill(0).map(function (_, index) {\n      return \"index-\" + index;\n    });\n  });\n  var snapPoints = useMemo(function () {\n    return props.snap;\n  }, []);\n  var handleSheetChanges = useCallback(function (index) {\n    console.log('handleSheetChanges', index);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(BottomSheet, {\n    ref: bottomSheetRef,\n    index: 1,\n    snapPoints: snap1,\n    onChange: handleSheetChanges,\n    style: {\n      margin: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(BusNavigator, {\n    initialRouteName: props.initialRouteName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  }\n});\nexport default Bottom;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/bus2u/BUS2U-main/src/screens/components/Bottom.js"],"names":["React","useCallback","useMemo","useRef","memo","useEffect","BottomSheet","BottomSheetFlatList","AntDesign","createStackNavigator","TransitionPresets","NavigationContainer","useNavigation","BusScreen","ETAScreen","RouteScreen","EndScreen","BusStopScreen","call","Stacktmp","EndStack","Stack","BusNavigator","props","console","log","initialRouteName","screenOptions","headerShown","safeAreaInsets","top","screenAOptions","headerleft","Bottom","snap1","navigation","bottomSheetRef","data","Array","fill","map","_","index","snapPoints","snap","handleSheetChanges","margin","styles","StyleSheet","create","container","flex","alignItems"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useRef, memo, useEffect } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\nimport BottomSheet, { BottomSheetFlatList } from '@gorhom/bottom-sheet';\nimport { AntDesign } from '@expo/vector-icons';\nimport { ScrollView } from 'react-native';\nimport { createStackNavigator, TransitionPresets, } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useNavigation } from '@react-navigation/native'\n\nimport BusScreen from '../BusScreen';\nimport ETAScreen from '../ETAScreen';\nimport RouteScreen from '../RouteScreen';\nimport EndScreen from '../EndScreen';\nimport BusStopScreen from '../BusStopScreen';\nimport { call } from 'react-native-reanimated';\n\n\n// export const BusScreentmp = (props) => {\n//   const insets = useSafeAreaInsets();\n  \n \n//   return (\n//     <React.Fragment>\n//       <BottomSheetFlatList\n//         data={props.data}\n//         keyExtractor={i => i.id}\n//         renderItem={props.renderItem}\n//         contentContainerStyle={{\n//           flex: 1,\n//           alignItems: 'center',\n//           paddingBottom: insets.bottom\n//         }}\n//         onPress={() => props.handleRoute()}\n     \n//       />\n//     </React.Fragment>\n//   )\n// }\nconst Stacktmp = createStackNavigator();\n\nfunction EndStack(){\n  return(\n    <Stacktmp.Navigator>\n      <Stacktmp.Screen  name=\"End\" component={EndScreen} />\n    </Stacktmp.Navigator>\n  )\n}\n\n\nconst Stack = createStackNavigator();\nexport const BusNavigator = (props) => {\n  \n  console.log(props.initialRouteName, '52 line')\n  const screenOptions = useMemo(\n    () => ({\n\n      \n\n      headerShown: false,\n      safeAreaInsets: { top: 0 },\n      // cardStyle: {\n      //   backgroundColor: 'white',\n      //   overflow: 'visible',\n      // },\n    }),\n    []\n  );\n  const screenAOptions = useMemo(() => ({ headerleft: () => null }), []);\n  return (\n    <NavigationContainer independent={true}>\n      <Stack.Navigator screenOptions={screenOptions} headerMode=\"screen\" >\n        {\n          props.initialRouteName === \"Bus\" ? (\n            <Stack.Screen name=\"Bus\" component={BusScreen} options={screenAOptions} /> \n          ) : (\n            <Stack.Screen name=\"Busstop\" component={BusStopScreen} options={screenAOptions} />\n          )\n        }\n        \n        <Stack.Screen name=\"ETA\" component={ETAScreen} options={{headerShown: false}} />\n        <Stack.Screen name=\"Route\" component={RouteScreen} />\n        <Stack.Screen name=\"End\" component={EndStack} />\n        \n\n      </Stack.Navigator>\n    </NavigationContainer>\n\n  )\n\n}\n\n\n\n\n\nconst Bottom = (props) => {\n  // Snap\n  const snap1 = [\n    '17%','40%', '40%'\n  ]\n  const navigation = useNavigation()\n  \n\n  // Bus Navigator for BottomSheet ai mate\n \n\n\n  // ref\n  const bottomSheetRef = useRef(null);\n\n  // \n  const data = useMemo(\n    () =>\n      Array(50)\n        .fill(0)\n        .map((_, index) => `index-${index}`),\n  )\n\n  // variables\n  const snapPoints = useMemo(() => props.snap, []);\n\n  // callbacks\n  const handleSheetChanges = useCallback((index) => {\n    console.log('handleSheetChanges', index);\n  }, []);\n\n\n\n\n  return (\n    <>\n\n      <BottomSheet\n        ref={bottomSheetRef}\n        index={1}\n        snapPoints={snap1}\n        onChange={handleSheetChanges}\n        style={{ margin: 10 }}\n        \n\n      >\n        \n        \n          \n\n\n\n          {/* <BottomSheetFlatList\n            data={props.data}\n            keyExtractor={i => i.id}\n            renderItem={props.renderItem}\n          />  */}\n          \n\n         \n          <BusNavigator initialRouteName={props.initialRouteName}/>\n\n        \n\n      </BottomSheet>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    alignItems: 'center',\n   \n  },\n  \n\n\n\n});\n\nexport default Bottom;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const renderItem = useCallback(\n//   ({ item }) => (\n//     <View style={styles.innerstyle}>\n//       <Image\n//         style={styles.busstyle}\n//         source={require(\"../../../assets/bus.png\")} />\n//       <View style={{ flexDirection: \"column\", width: 200, height: 40 }}>\n//         <Text style={styles.textStyle} >{item.bus_no}</Text>\n//         <Text style={styles.placetextStyle}>{item.bus_name}</Text>\n\n//       </View>\n//       <View style={styles.columnStyle}>\n\n//         <Text style={styles.timetextStyle} >{item.bus_time}</Text>\n//         <TouchableOpacity\n//           onPress={() => props.handleRoute()}\n//           style={{ marginTop: 12 }} >\n\n//           <AntDesign name=\"right\" size={24} color=\"black\" />\n//         </TouchableOpacity>\n\n//       </View>\n\n//     </View>\n\n//   )\n\n// )\n\n\n\n\n\n\n\n  // busstyle:{\n  //   width: 50,\n  //   height: 50,\n  //   marginRight: 10,\n  //   marginLeft: 0\n\n  // },\n  // innerstyle: {\n  //   width: \"90%\",\n  //   borderWidth: 0,\n  //   paddingBottom: 10,\n  //   // borderColor: \"red\",\n  //   marginTop: 30,\n  //   flexDirection: \"row\",\n  //   justifyContent: \"space-evenly\",\n  //   alignItems: \"center\",\n\n\n  // },\n  // textStyle:{\n\n  //   fontWeight: \"bold\",\n  //   color: \"#394A48\"\n  // },\n  // placetextStyle:{\n\n  //   // fontWeight: \"bold\",\n  //   color: \"#394A48\"\n  // },\n  // timetextStyle:{\n\n  //   fontWeight: \"bold\",\n  //   color: \"#FF6A15\",\n  //   marginTop: 15,\n\n\n  // },\n  // columnStyle: {\n  //   flex: 1, \n  //   flexDirection: 'row',\n  //   marginLeft: 5,\n  // },"]},"metadata":{},"sourceType":"module"}