{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\bus2u\\\\BUS2U-main\\\\src\\\\screens\\\\navigator\\\\RootNavigator.js\",\n    _this2 = this;\n\nimport React, { useEffect } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport HomeScreen from \"../HomeScreen\";\nimport BusStopScreen from \"../BusStopScreen\";\nimport RouteScreen from \"../RouteScreen\";\nimport EndScreen from \"../EndScreen\";\nimport InfoScreen from \"../InfoScreen\";\nimport FavouriteScreen from \"../FavouriteScreen\";\nimport ProfileScreen from \"../ProfileScreen\";\nimport SettingScreen from \"../SettingScreen\";\nimport CustomDrawerContent from \"../components/drawer/CustomDrawerContent\";\nimport { FontAwesome, Entypo } from '@expo/vector-icons';\nimport AuthStack from \"../stack/AuthStack\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser, signInWithEmailAndPassword, logout, updateUser } from \"../slices/userSlice\";\nimport { auth } from \"../firebase\";\nimport ImageLogo from \"../../screens/components/ImageLogo\";\nimport MapScreen from \"../MapScreen\";\nimport Route2Screen from \"../Route2Screen\";\nvar StackHome = createStackNavigator();\n\nfunction handleHeader() {\n  var _this = this;\n\n  return {\n    headerTitle: function headerTitle(props) {\n      return React.createElement(ImageLogo, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 27\n        }\n      }));\n    },\n    headerTitleAlign: 'center',\n    headerStyle: {\n      height: 90,\n      backgroundColor: \"white\",\n      borderBottomColor: \"#000\"\n    },\n    headerShown: true\n  };\n}\n\nfunction HomeStack() {\n  return React.createElement(StackHome.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(StackHome.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Tab = createBottomTabNavigator();\n\nvar TabNavigator = function TabNavigator() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home';\n            color = focused ? 'black' : 'grey';\n          } else if (route.name === 'Favourite') {\n            iconName = focused ? 'star' : 'star';\n            color = focused ? 'black' : 'grey';\n          } else if (route.name === 'Information') {\n            iconName = focused ? 'location-arrow' : 'location-arrow';\n            color = focused ? 'black' : 'grey';\n          }\n\n          return React.createElement(FontAwesome, {\n            name: iconName,\n            size: 24,\n            color: color,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 16\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'black',\n      inactiveTintColor: 'gray'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeStack,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Information\",\n    component: InfoScreen,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Favourite\",\n    component: FavouriteScreen,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar Laci = createDrawerNavigator();\n\nfunction DrawerNavigator() {\n  var _this3 = this;\n\n  return React.createElement(Laci.Navigator, {\n    initialRouteName: \"HomeApp\",\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 31\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, React.createElement(Laci.Screen, {\n    name: \"HomeApp\",\n    component: TabNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), React.createElement(Laci.Screen, {\n    name: \"Accounts\",\n    component: ProfileScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), React.createElement(Laci.Screen, {\n    name: \"Favourite\",\n    component: FavouriteScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), React.createElement(Laci.Screen, {\n    name: \"Information\",\n    component: InfoScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), React.createElement(Laci.Screen, {\n    name: \"Setting\",\n    component: SettingScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar Combine = createStackNavigator();\n\nfunction CombineNavigator() {\n  return React.createElement(Combine.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, React.createElement(Combine.Screen, {\n    options: handleHeader,\n    name: \"Home\",\n    component: DrawerNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), React.createElement(Combine.Screen, {\n    options: handleHeader,\n    name: \"Map\",\n    component: MapScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), React.createElement(Combine.Screen, {\n    options: handleHeader,\n    name: \"Route2\",\n    component: Route2Screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }), React.createElement(Combine.Screen, {\n    name: \"End\",\n    component: EndScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar RootNavigator = function RootNavigator() {\n  var user = useSelector(selectUser);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var subscribe = auth.onAuthStateChanged(function (userAuth) {\n      if (userAuth) {\n        var payload = {\n          email: userAuth.email,\n          username: userAuth.displayName,\n          id: userAuth.uid,\n          authenticated: true,\n          isSuccess: true\n        };\n        dispatch(updateUser(payload));\n      } else {\n        dispatch(logout());\n      }\n    });\n    subscribe();\n    return subscribe;\n  }, []);\n  console.log(\"Root Navigator: 45\", user);\n  return React.createElement(React.Fragment, null, React.createElement(CombineNavigator, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RootNavigator;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/bus2u/BUS2U-main/src/screens/navigator/RootNavigator.js"],"names":["React","useEffect","createStackNavigator","createBottomTabNavigator","createDrawerNavigator","HomeScreen","BusStopScreen","RouteScreen","EndScreen","InfoScreen","FavouriteScreen","ProfileScreen","SettingScreen","CustomDrawerContent","FontAwesome","Entypo","AuthStack","useDispatch","useSelector","selectUser","signInWithEmailAndPassword","logout","updateUser","auth","ImageLogo","MapScreen","Route2Screen","StackHome","handleHeader","headerTitle","props","headerTitleAlign","headerStyle","height","backgroundColor","borderBottomColor","headerShown","HomeStack","Tab","TabNavigator","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","Laci","DrawerNavigator","Combine","CombineNavigator","RootNavigator","user","dispatch","subscribe","onAuthStateChanged","userAuth","payload","email","username","displayName","id","uid","authenticated","isSuccess","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { createStackNavigator } from '@react-navigation/stack';\n// import HomeStack from '../stack/HomeStack';\n\nimport {createBottomTabNavigator } from  '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport HomeScreen from '../HomeScreen';\nimport BusStopScreen from '../BusStopScreen';\n\nimport RouteScreen from '../RouteScreen'; \nimport EndScreen from '../EndScreen';\nimport InfoScreen from '../InfoScreen';\n//SearchScreen\n//EndScreen\nimport FavouriteScreen from '../FavouriteScreen';\nimport ProfileScreen from '../ProfileScreen';\nimport SettingScreen from '../SettingScreen';\nimport CustomDrawerContent from '../components/drawer/CustomDrawerContent';\nimport { FontAwesome, Entypo } from '@expo/vector-icons';\nimport AuthStack from '../stack/AuthStack';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {  selectUser, signInWithEmailAndPassword, logout, updateUser } from '../slices/userSlice';\nimport { auth } from '../firebase';\nimport ImageLogo from '../../screens/components/ImageLogo'\n\nimport MapScreen from '../MapScreen';\nimport Route2Screen from '../Route2Screen';\n\n\n// export function Header({ isHome, navigation }) {\n//   return (\n//     <View style={{ flexDirection: 'row', height: 50 }}>\n//       {isHome ? (\n//         <TouchableOpacity onPress={() => navigation.openDrawer()}>\n//           <View\n//             style={{ flex: 1, justifyContent: 'center', textAlign: 'center' }}>\n//                 <Entypo name=\"menu\" size={24} color=\"black\" />\n//           </View>\n//         </TouchableOpacity>\n//       ) : (\n//         <View style={{ flex: 1, justifyContent: 'center' }}>\n//           <TouchableOpacity onPress={() => navigation.goBack()}>\n//             <Image\n//               style={{ width: 30, height: 30, marginLeft: 5 }}\n//               source={require('./back-button.png')}\n//               resizeMode=\"contain\"\n//             />\n//           </TouchableOpacity>\n//         </View>\n//       )}\n\n//       <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end' }}>\n//         <Text style={{ textAlign: 'center' }}>{title}</Text>\n//       </View>\n//       <View style={{ flex: 1 }}></View>\n//     </View>\n//   );\n// }\n\n\n\nconst StackHome = createStackNavigator();\n\nfunction handleHeader() {\n  return {\n    headerTitle: props => <ImageLogo {...props} /> ,\n    headerTitleAlign: 'center',\n    headerStyle: { height: 90, backgroundColor: \"white\", borderBottomColor: \"#000\"},\n    headerShown: true,\n    \n  }\n}\n\nfunction HomeStack() {\n  return (\n    <StackHome.Navigator\n          \n    >\n      <StackHome.Screen\n       options={{headerShown: false}}\n        name=\"Home\"\n        component={HomeScreen}\n        \n      />\n     \n        \n    \n    \n      {/* Remember to add EndScreen and SearchScreen */}\n    </StackHome.Navigator>\n  );\n\n}\n\nconst Tab = createBottomTabNavigator();\nconst TabNavigator = () => {\n  return (\n    <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n\n        if (route.name === 'Home') {\n          iconName = focused ? 'home' : 'home';\n          color = focused ? 'black' : 'grey';\n        } else if (route.name === 'Favourite') {\n          iconName = focused ? 'star' : 'star';\n          color = focused ? 'black' : 'grey';\n        } else if (route.name === 'Information') {\n          iconName = focused ? 'location-arrow' : 'location-arrow';\n          color = focused ? 'black' : 'grey';\n        } //home\n        // //  else if (route.name === 'Profile') {\n        // //   iconName = focused ? 'user-circle' : 'user-circle';\n        // //   color = focused ? 'black' : 'grey';\n        // }\n        return <FontAwesome name={iconName} size={24} color={color}  />;\n      },\n    })}\n    tabBarOptions={{\n      activeTintColor: 'black',\n      inactiveTintColor: 'gray',\n    }}>\n    \n    \n      <Tab.Screen name=\"Home\"  component={HomeStack}  />\n      <Tab.Screen name=\"Information\" component={InfoScreen}  />\n      <Tab.Screen name=\"Favourite\" component={FavouriteScreen}  />\n\n    </Tab.Navigator>\n  );\n};\n\nconst Laci = createDrawerNavigator();\n\n\nfunction DrawerNavigator() {\n  return (\n    <Laci.Navigator\n    initialRouteName=\"HomeApp\"\n    drawerContent={(props) => <CustomDrawerContent {...props} />}\n    \n      \n    > \n        <Laci.Screen\n          name=\"HomeApp\"\n          component={TabNavigator}\n         \n          \n        />\n        <Laci.Screen name=\"Accounts\" component={ProfileScreen}  />\n        <Laci.Screen name=\"Favourite\" component={FavouriteScreen}  />\n        <Laci.Screen name=\"Information\" component={InfoScreen}  />\n        <Laci.Screen name=\"Setting\" component={SettingScreen}  />\n\n    </Laci.Navigator>\n    )\n    \n}\n\nconst Combine = createStackNavigator();\n\nfunction CombineNavigator() {\n  return(\n    <Combine.Navigator\n    initialRouteName=\"Home\"\n    screenOptions={{\n      headerShown: false\n    }}\n    >\n      <Combine.Screen \n         options={handleHeader}\n         name=\"Home\"\n         component={DrawerNavigator}\n      />\n      {/* <Combine.Screen \n       options={handleHeader}\n       name=\"Bus\"\n       component={BusScreen}\n      />\n     \n       <Combine.Screen \n       options={handleHeader}\n       name=\"ETA\"\n       component={ETAScreen}\n      \n      /> */}\n       {/* <Combine.Screen \n       options={handleHeader}\n       name=\"BusStop\"\n       component={BusStopScreen}\n      /> */}\n      <Combine.Screen\n      options={handleHeader}\n      name=\"Map\"\n      component={MapScreen} \n      />\n      {/* <Combine.Screen \n       options={handleHeader}\n       name=\"Route\"\n       component={RouteScreen} \n      \n      /> */}\n     \n      <Combine.Screen \n       options={handleHeader}\n       name=\"Route2\"\n       component={Route2Screen} \n      \n      />\n      <Combine.Screen\n      name=\"End\"\n      component={EndScreen}\n/>\n    </Combine.Navigator>\n\n  )\n}\n\n\nconst RootNavigator = () => {\n  \n  \n  const user = useSelector(selectUser);\n  const dispatch = useDispatch()\n  \n\n\n\n  useEffect( () => {\n   const subscribe =  auth.onAuthStateChanged( (userAuth) => {\n      if(userAuth) {\n        \n        const payload = {\n          \n          email: userAuth.email,\n          username: userAuth.displayName,\n          id: userAuth.uid,\n          authenticated: true,\n          isSuccess: true\n        }\n        // set id email uid\n        dispatch(updateUser(payload))\n       \n      } else {\n        dispatch(logout())\n      }\n    })\n    subscribe()\n    return subscribe\n\n   \n  },[])\n  console.log(\"Root Navigator: 45\",user);\n\n  return (\n        <>\n      {/* {\n          \n          user.authenticated === false ? <AuthStack /> : (\n                  <Drawer />\n          )\n      } */}\n      {/* <AuthStack /> */}\n      <CombineNavigator/>\n   \n</>\n  )\n}\n\nexport default RootNavigator\n"]},"metadata":{},"sourceType":"module"}