{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\bus2u\\\\BUS2U-main\\\\src\\\\screens\\\\LoginScreen.js\";\n\nimport React, { useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Icon } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport SizedBox from \"./components/SizedBox\";\nimport { selectUser } from \"./slices/userSlice\";\nimport { signInWithEmailAndPassword, clearState } from \"./slices/userSlice\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nvar LoginScreen = function LoginScreen(props) {\n  var _errors$email, _errors$password;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(selectUser),\n      isFetching = _useSelector.isFetching,\n      isSuccess = _useSelector.isSuccess,\n      isError = _useSelector.isError,\n      errorMessage = _useSelector.errorMessage;\n\n  var handlePress2 = function handlePress2() {\n    props.navigation.navigate('Signup');\n  };\n\n  var emailInput = useRef(null);\n  var passwordInput = useRef(null);\n\n  var _useForm = useForm({\n    defaultValues: {\n      email: '',\n      password: ''\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var onSubmit = handleSubmit(function (_ref) {\n    var email = _ref.email,\n        password = _ref.password;\n    var data = {\n      email: email,\n      password: password\n    };\n    dispatch(signInWithEmailAndPassword(data));\n  });\n  useEffect(function () {\n    if (isError) {\n      Alert.alert(\"\" + errorMessage);\n      dispatch(clearState());\n    }\n\n    if (isSuccess) {\n      dispatch(clearState());\n    }\n  }, [isError, isSuccess]);\n\n  var onChange = function onChange(arg) {\n    return {\n      value: arg.nativeEvent.text\n    };\n  };\n\n  console.log('errors', errors);\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logostyle,\n    source: require(\"../../assets/B2.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  })), React.createElement(SafeAreaView, {\n    style: styles.safeAreaView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Welcome back!\"), React.createElement(SizedBox, {\n    height: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.subtitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Log in to your account\"), React.createElement(SizedBox, {\n    height: 32,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(Controller, {\n    control: control,\n    name: \"email\",\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          onBlur = _ref2$field.onBlur,\n          onChange = _ref2$field.onChange,\n          value = _ref2$field.value;\n      return React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        autoCompleteType: \"email\",\n        autoCorrect: false,\n        keyboardType: \"email-address\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          var _emailInput$current;\n\n          return (_emailInput$current = emailInput.current) == null ? void 0 : _emailInput$current.focus();\n        },\n        returnKeyType: \"next\",\n        style: styles.textInput,\n        textContentType: \"emailAddress\",\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      });\n    },\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, ((_errors$email = errors.email) == null ? void 0 : _errors$email.type) === 'required' && '*Email is required'), React.createElement(SizedBox, {\n    height: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), React.createElement(Pressable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Password\"), React.createElement(Controller, {\n    control: control,\n    name: \"password\",\n    render: function render(_ref3) {\n      var _ref3$field = _ref3.field,\n          onBlur = _ref3$field.onBlur,\n          onChange = _ref3$field.onChange,\n          value = _ref3$field.value;\n      return React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        onSubmitEditing: onSubmit,\n        ref: passwordInput,\n        returnKeyType: \"done\",\n        style: styles.textInput,\n        textContentType: \"password\",\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      });\n    },\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }))), React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, ((_errors$password = errors.password) == null ? void 0 : _errors$password.type) === 'required' && '*Password is required'), React.createElement(SizedBox, {\n    height: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPasswordContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Forgot password?\")), React.createElement(SizedBox, {\n    height: 32,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }), isFetching ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    onPress: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, \"Continue\"))), React.createElement(SizedBox, {\n    height: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handlePress2();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, \"Register New Account\"))))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    marginTop: 70,\n    marginBottom: 40\n  },\n  logostyle: {\n    width: 170,\n    height: 50,\n    textAlign: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: \"#2E3035\",\n    borderRadius: 0,\n    height: 48,\n    justifyContent: 'center'\n  },\n  buttonTitle: {\n    color: '#FFFFFF',\n    fontSize: 17,\n    fontWeight: '600',\n    lineHeight: 22\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 32\n  },\n  forgotPasswordContainer: {\n    alignItems: 'flex-end'\n  },\n  form: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 0,\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16\n  },\n  label: {\n    color: \"#BCABAB\",\n    fontSize: 15,\n    fontWeight: '400',\n    lineHeight: 20,\n    width: 80\n  },\n  root: {\n    backgroundColor: \"#D2DCFF\",\n    flex: 1\n  },\n  safeAreaView: {\n    flex: 1\n  },\n  subtitle: {\n    color: \"#394A48\",\n    fontSize: 17,\n    fontWeight: '400',\n    lineHeight: 22\n  },\n  textButton: {\n    color: \"#3742b3\",\n    fontSize: 12,\n    fontWeight: '400'\n  },\n  textInput: {\n    color: \"#394A48\",\n    flex: 1\n  },\n  title: {\n    color: \"#394A48\",\n    fontSize: 28,\n    fontWeight: '700',\n    lineHeight: 34\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/bus2u/BUS2U-main/src/screens/LoginScreen.js"],"names":["React","useEffect","useRef","Icon","useForm","Controller","SizedBox","selectUser","signInWithEmailAndPassword","clearState","useDispatch","useSelector","LoginScreen","props","dispatch","isFetching","isSuccess","isError","errorMessage","handlePress2","navigation","navigate","emailInput","passwordInput","defaultValues","email","password","control","handleSubmit","errors","formState","onSubmit","data","Alert","alert","onChange","arg","value","nativeEvent","text","console","log","Keyboard","dismiss","styles","root","container","logostyle","require","safeAreaView","Platform","OS","content","title","subtitle","form","label","field","onBlur","current","focus","textInput","required","color","type","forgotPasswordContainer","textButton","button","buttonTitle","StyleSheet","create","justifyContent","alignItems","flex","marginTop","marginBottom","width","height","textAlign","backgroundColor","borderRadius","fontSize","fontWeight","lineHeight","paddingHorizontal","paddingVertical","flexDirection"],"mappings":"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","sourcesContent":["import React, {  useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, Image, Icon, Button, TouchableOpacity, SafeAreaView, KeyboardAvoidingView, Pressable, TextInput, ScrollView, Alert, Keyboard, TouchableWithoutFeedback, ActivityIndicator } from \"react-native\"\n\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport SizedBox from './components/SizedBox';\n\nimport { selectUser } from './slices/userSlice';\nimport { signInWithEmailAndPassword, clearState } from './slices/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\n\n\nconst LoginScreen = (props) => {\n  // Navigation hook\n  \n\n  // Dispatch hook\n  const dispatch = useDispatch()\n \n// useSelector hook\n const {isFetching, isSuccess, isError, errorMessage} = useSelector(selectUser)\n\n  const handlePress2 = () => {\n    props.navigation.navigate('Signup')\n  }\n  const emailInput = useRef(null)\n  const passwordInput = useRef(null)\n\n  const {control, handleSubmit, formState: {errors}} = useForm ({\n      defaultValues: {\n        email: '',\n        password: '',\n      }\n  }) \n\n  const onSubmit = handleSubmit(({email, password}) => {\n      const data = {email, password};\n      dispatch(signInWithEmailAndPassword(data))\n  })\n\n  \n\n  useEffect(() => {\n    if(isError) {\n      Alert.alert(`${errorMessage}`)\n      dispatch(clearState());\n    }\n    if(isSuccess) {\n      dispatch(clearState());\n      // navigation.navigate('Home');\n    }\n  }, [isError, isSuccess])\n\n\n  const onChange = arg => {\n    return {\n      value: arg.nativeEvent.text,\n    }\n  }\n\n  console.log('errors', errors);\n\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n    <ScrollView style={styles.root}>\n      <View style={styles.container}>\n      <Image style={styles.logostyle} source={require('../../assets/B2.png')} />\n      </View>\n\n\n\n      <SafeAreaView style={styles.safeAreaView}>\n        <KeyboardAvoidingView\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n          style={styles.content}\n        >\n\n          <Text style={styles.title}>Welcome back!</Text>\n          <SizedBox height={8} />\n\n          <Text style={styles.subtitle}>Log in to your account</Text>\n          <SizedBox height={32} />\n          <View style={styles.form}>\n            <Text style={styles.label}>Email</Text>\n            \n            <Controller\n            control={control}\n            name=\"email\"\n            render={({field: {onBlur, onChange, value}}) => (\n              <TextInput\n              autoCapitalize=\"none\"\n              autoCompleteType=\"email\"\n              autoCorrect={false}\n              keyboardType=\"email-address\"\n              onBlur={onBlur}\n              onChangeText={value => onChange(value)}\n              onSubmitEditing={() => emailInput.current?.focus()}\n              returnKeyType=\"next\"\n              style={styles.textInput}\n              textContentType=\"emailAddress\"\n              value={value}\n            />\n            )}\n            rules={{required: true}}\n            />\n            \n          </View>\n          <Text style = {{color: \"red\"}}>{errors.email?.type === 'required' && '*Email is required'}</Text>\n\n\n          <SizedBox height={8} />\n\n          <Pressable>\n            <View style={styles.form}>\n              <Text style={styles.label}>Password</Text>\n              <Controller\n                control={control}\n                name=\"password\"\n                render={({field: {onBlur, onChange, value}}) => (\n                  <TextInput\n                  autoCapitalize=\"none\"\n                  secureTextEntry={true}\n                  autoCompleteType=\"password\"\n                  autoCorrect={false}\n                  onBlur={onBlur}\n                  onChangeText={value => onChange(value)}\n                  onSubmitEditing={onSubmit}\n                  ref={passwordInput}\n                  returnKeyType=\"done\"\n                  style={styles.textInput}\n                  textContentType=\"password\"\n                  value={value}\n                />\n                )}\n                rules={{required: true}}\n                />\n            </View>\n          </Pressable>\n          <Text style = {{color: \"red\"}}>{errors.password?.type === 'required' && '*Password is required'}</Text>\n\n          <SizedBox height={1} />\n\n          <View style={styles.forgotPasswordContainer}>\n            <Text style={styles.textButton}>Forgot password?</Text>\n          </View>\n\n          <SizedBox height={32} />\n\n                  {isFetching ? (\n                    <ActivityIndicator size=\"large\" /> \n                  ) : (\n                    <>\n                    <TouchableOpacity onPress={onSubmit} >\n                    <View style={styles.button}>\n                      <Text style={styles.buttonTitle}>Continue</Text>\n                    </View>\n                  </TouchableOpacity>\n                  <SizedBox height={10} />\n        \n                  <TouchableOpacity onPress={() => handlePress2()}>\n                    <View style={styles.button}>\n                      <Text style={styles.buttonTitle}>Register New Account</Text>\n                    </View>\n                  </TouchableOpacity>\n                  </>\n                  )}\n         \n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    </ScrollView>\n    </TouchableWithoutFeedback>\n\n\n\n\n    //     <View style={styles.backgroundstyle}>\n    //       <View  style= {styles.circle1}/>\n    //       <Image style={styles.logostyle} source={require('../../assets/logo.png')} />\n    //       <View style={styles.box} >\n    //         <InputUser styles={styles.containerStyle} \n    //         leftIcon = {\n    //         <MaterialCommunityIcons\n    //         name=\"email-outline\" \n    //         size={18} \n    //         color='#394A48' /> \n    //       } \n    //         label=\"Email\" \n    //         placeholder=\"email@address.com\"      \n    //         labelStyle = {{\n    //           color: \"#394A48\"\n    //         }}\n    //         />\n    //         <InputUser styles={styles.containerStyle} \n    //         leftIcon={\n    //           <MaterialIcons\n    //           name=\"lock-outline\" \n    //           size={18} \n    //           color='#394A48' /> \n    //         }     \n    //         label=\"Password\"     \n    //         placeholder= \"password\"     \n    //         labelStyle = {{\n    //           color: \"#394A48\"\n    //         }}         />\n    // <TouchableOpacity  style={styles.ButtonContainer}>\n    //    <Text style= {styles.ButtonText} >LOG IN</Text> \n    //   </TouchableOpacity>\n    //       </View>\n    //      </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  // circle1 : {\n  //     position: 'absolute',\n  //     width: 400,\n  //     height: 370,\n  //     borderRadius: 200,\n  //     left: -150,\n  //     top: -100,\n  //     backgroundColor: \"#47DECC\",\n\n  //   backgroundstyle: {\n  //     backgroundColor: \"#C3FFF8\",\n  //     flex: 1\n\n  //   },\n  //   box: {\n  //     backgroundColor: \"#47DECC\",\n  //     position: 'absolute',\n  //     marginTop: 270,\n  //     marginLeft: 30,\n  //     width: 350,\n  //     height: 300,\n  //     borderRadius: 10,\n  //     padding: 20,\n  //     shadowColor: \"#000\",\n  // shadowOffset: {\n  // \twidth: 0,\n  // \theight: 3,\n  // },\n  // shadowOpacity: 0.29,\n  // shadowRadius: 4.65,\n\n  // elevation: 7,\n\n  //   },\n  //   logostyle: {\n  //     width: 150,\n  //     height: 100,\n  //     margin: 130\n  //   },\n  //   ButtonContainer: {\n  //     elevation: 8,\n  //     backgroundColor: \"#C3FFF8\",\n  //     borderRadius: 10,\n  //     paddingVertical: 10,\n  //     paddingHorizontal: 12,\n  //     shadowColor: \"#000\",\n  // shadowOffset: {\n  // \twidth: 0,\n  // \theight: 2,\n  // },\n  // shadowOpacity: 0.23,\n  // shadowRadius: 2.62,\n\n  // elevation: 4,\n  //   },\n  //   ButtonText: {\n  //     fontSize: 14,\n  //     color: \"#394A48\",\n  //     fontWeight: \"bold\",\n  //     alignSelf: \"center\",\n  //     textTransform: \"uppercase\"\n  //   }\n\n  // })\n  container: {\n\n    justifyContent: 'center', //Centered vertically\n    alignItems: 'center', // Centered horizontally\n    flex: 1,\n    marginTop: 70,\n    marginBottom: 40\n    // height: '100%'\n\n  },\n  logostyle: {\n\n    width: 170,\n    height: 50,\n    textAlign: 'center'\n\n  },\n  button: {\n    alignItems: 'center',\n    // backgroundColor: 'rgb(93, 95, 222)',\n    backgroundColor: \"#2E3035\",\n    borderRadius: 0,\n    height: 48,\n    justifyContent: 'center',\n  },\n  buttonTitle: {\n    color: '#FFFFFF',\n    fontSize: 17,\n    fontWeight: '600',\n    lineHeight: 22,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 32,\n  },\n  forgotPasswordContainer: {\n    alignItems: 'flex-end',\n\n  },\n  form: {\n    alignItems: 'center',\n    // backgroundColor: 'rgb(58, 58, 60)',\n    backgroundColor: 'white',\n    borderRadius: 0,\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  label: {\n    // color: 'rgba(235, 235, 245, 0.6)',\n    color: \"#BCABAB\",\n    fontSize: 15,\n    fontWeight: '400',\n    lineHeight: 20,\n    width: 80,\n  },\n  root: {\n    backgroundColor: \"#D2DCFF\",\n    flex: 1,\n\n  },\n  safeAreaView: {\n    flex: 1,\n  },\n  subtitle: {\n    // color: 'rgba(235, 235, 245, 0.6)',\n    color: \"#394A48\",\n    fontSize: 17,\n    fontWeight: '400',\n    lineHeight: 22,\n  },\n  textButton: {\n    color: \"#3742b3\",\n    fontSize: 12,\n    fontWeight: '400',\n   \n    \n  },\n  textInput: {\n    color: \"#394A48\",\n    flex: 1,\n  },\n  title: {\n    color: \"#394A48\",\n    fontSize: 28,\n    fontWeight: '700',\n    lineHeight: 34,\n  },\n})\n\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}